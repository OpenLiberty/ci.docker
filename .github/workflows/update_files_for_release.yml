# This workflow is triggered by manual inputs.

name: Update files for the new release

on:
  workflow_dispatch:
    inputs:
      OLD_VERSION:
        description: 'Enter old version'
        # Show defaults as examples so user enters correct format.
        default: '23.0.0.11'
        required: true
        type: string
      NEW_VERSION:
        description: 'Enter new version'
        default: '23.0.0.12'
        required: true
        type: string
      BETA_VERSION:
        description: 'Enter beta version'
        default: '24.0.0.1'
        required: true
        type: string
      BUILD_LABEL:
        description: 'Enter build label of release driver'
        default: '{replace_with_gm_driver_label}'
        required: false
        type: string

jobs:
  automate_release_updates:
    runs-on: ubuntu-latest

    steps:
    - name: Show useful information about the workflow environment
      run: echo "üîé This workflow is running in branch ${{ github.ref }} and repository ${{ github.repository }}."

    # This repository and branch to clone and checkout on runner 
    # could be different than repo and branch where workflow runs.
    # Be aware of this nuance.
    - name: Check out repository code to runner
      uses: actions/checkout@v4
      with:
        ref: vNext
        repository: OpenLiberty/ci.docker

    - name: Run create-new-release.sh script
      run: bash ./create-new-release.sh ${{ inputs.OLD_VERSION }} ${{ inputs.NEW_VERSION }} ${{ inputs.BETA_VERSION }} ${{ inputs.BUILD_LABEL }}

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with: 
        default_author: github_actions
        author_name: GitHub Actions
        message: "Updates for the release of ${{ inputs.NEW_VERSION }}"
        add: '${{ github.workspace }}/releases/* ${{ github.workspace }}/.travis.yml'
        new_branch: "${{ inputs.NEW_VERSION }}-release"
        push: true
        tag_push: '--force'

    - name: Create Pull Request
      run: |
        gh pr create -B vNext -H "${{ inputs.NEW_VERSION }}-release" -r mbroz2 -r leochr --title "Updates for the release of ${{ inputs.NEW_VERSION }}" --body "Created by Github Actions"
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - run: echo "üçè This job's status is ${{ job.status }}."
